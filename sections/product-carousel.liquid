

{% liquid
  assign max_items = section.settings.max_products

  if section.settings.collection != blank and shop.products_count != 0
    assign section_products = section.settings.collection.products
    assign max_items = section_products.size | at_most: section.settings.max_products
  endif

  case section.settings.layout_type
    when 'grid'
      assign classes = 'resource-list--grid'
      capture styles
        echo '--resource-list-column-gap-desktop: ' | append: section.settings.columns_gap | append: 'px;'
        echo '--resource-list-row-gap-desktop: ' | append: section.settings.rows_gap | append: 'px;'
        echo '--resource-list-columns: repeat(' | append: section.settings.columns | append: ', 1fr);'
        echo '--resource-list-columns-mobile: repeat(' | append: section.settings.mobile_columns | append: ', 1fr);'
      endcapture
    when 'carousel'
      assign classes = 'resource-list__carousel'
      capture styles
        echo '--resource-list-column-gap-desktop: ' | append: section.settings.columns_gap | append: 'px;'
        echo '--column-count: 4;'
        echo '--column-count-mobile: 2;'
        echo '--mobile-card-size: ' | append: section.settings.mobile_card_size | append: ';'
        echo '--slide-width: calc((100% - (var(--resource-list-column-gap) * 3)) / 4);'
        echo '--slide-width-mobile: calc((100% - (var(--resource-list-column-gap) * 1)) / 2);'
      endcapture
  endcase
%}

<div class="section-background color-{{ section.settings.color_scheme }}"></div>
<div
  class="
    section
    section--{{ section.settings.section_width }}
    color-{{ section.settings.color_scheme }}
    section-resource-list
    spacing-style
    gap-style
  "
  style="
    --column-count-mobile: {{ section.settings.mobile_columns }};
    {% render 'spacing-style', settings: section.settings %}
    {% render 'gap-style', value: section.settings.gap %}
    {{ styles }}
  "
>
  <div class="section-resource-list__header">
    {%- content_for 'block', type: '_product-list-content', id: 'static-header' -%}
  </div>

  {% capture list_items %}
    {% for i in (1..max_items) %}
      {% if section_products.size > 0 %}
        {% assign index = forloop.index0 %}
        {% assign product = section_products[index] %}
      {% else %}
        {% assign product = null %}
      {% endif %}
      <div
        class="resource-list__item"
      >
        {%- content_for 'block', type: '_product-card', id: 'static-product-card', closest.product: product -%}
      </div>

      {% unless forloop.last %}
        <!--@list/split-->
      {% endunless %}

    {% endfor %}
  {% endcapture %}

  {% liquid
    # Create an array from the list items to be used for different layout types
    assign list_items_array = list_items | strip | split: '<!--@list/split-->'
  %}

  <div
    class="
      resource-list
      {% if section.settings.carousel_on_mobile and section.settings.layout_type != 'carousel' %}
        hidden--mobile
      {% endif %}
      {{ classes }}
    "
    style="{{ styles }}"
    {% if section.settings.layout_type == 'grid' %}
      data-testid="resource-list-grid"
    {% endif %}
  >
    {% case section.settings.layout_type %}
      {% when 'grid' %}
        {{ list_items }}
      {% when 'carousel' %}
        {% render 'resource-list-carousel',
          ref: 'resourceListCarousel',
          slides: list_items_array,
          slide_count: max_items,
          settings: section.settings
        %}
        
        <!-- Combined Navigation Container -->
        <div class="slideshow-navigation-container" data-total-products="{{ max_items }}" data-products-per-view="4">
          <!-- Dot Navigation - Left -->
          <div class="slideshow-dots">
            {% for i in (1..5) %}
              <button 
                class="slideshow-dot{% if forloop.first %} active{% endif %}" 
                data-slide="{{ forloop.index0 }}"
                aria-label="Go to slide {{ forloop.index }}"
              ></button>
            {% endfor %}
          </div>
          
                  <!-- Arrow Navigation - Right (Previous and Next) -->
        <div class="slideshow-arrows-container">
          <div class="slideshow-controls">
            <button 
              class="slideshow-control slideshow-control--prev" 
              aria-label="Previous slide" 
              type="button"
              style="opacity: 0; pointer-events: none; visibility: hidden; transition: opacity 0.3s ease;"
                onclick="
                  console.log('Previous button clicked via inline onclick');
                  const slideshow = document.querySelector('.section-resource-list slideshow-component');
                  if (slideshow) {
                    const current = slideshow.current || 0;
                    const prev = current > 0 ? current - 1 : 4;
                    console.log('Moving from', current, 'to', prev);
                    slideshow.select(prev);
                    
                    // Update dots
                    const dots = document.querySelectorAll('.section-resource-list .slideshow-dot');
                    dots.forEach((dot, index) => {
                      dot.classList.toggle('active', index === prev);
                    });
                    
                    // Update arrow visibility directly
                    setTimeout(() => {
                      console.log('Updating arrow visibility for prev:', prev);
                      const prevButton = document.querySelector('.section-resource-list .slideshow-control--prev');
                      const nextButton = document.querySelector('.section-resource-list .slideshow-control--next');
                      
                      if (prevButton && nextButton) {
                        // Show Previous button since we're moving to a non-first slide
                        prevButton.style.opacity = '1';
                        prevButton.style.pointerEvents = 'auto';
                        prevButton.style.visibility = 'visible';
                        console.log('Previous button made visible');
                        
                        // Check if we need to hide Next button
                        const navContainer = document.querySelector('.section-resource-list .slideshow-navigation-container');
                        const totalProducts = navContainer ? parseInt(navContainer.dataset.totalProducts) : 8;
                        const productsPerView = navContainer ? parseInt(navContainer.dataset.productsPerView) : 4;
                        const lastSlideIndex = Math.max(0, totalProducts - productsPerView);
                        
                        if (prev >= lastSlideIndex) {
                          nextButton.style.opacity = '0';
                          nextButton.style.pointerEvents = 'none';
                          nextButton.style.visibility = 'hidden';
                          console.log('Next button hidden (last slide)');
                        } else {
                          nextButton.style.opacity = '1';
                          nextButton.style.pointerEvents = 'auto';
                          nextButton.style.visibility = 'visible';
                          console.log('Next button visible');
                        }
                      }
                    }, 100);
                  } else {
                    console.error('Slideshow not found');
                  }
                "
              >
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon icon-arrow">
                  <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
              <button 
                class="slideshow-control slideshow-control--next" 
                aria-label="Next slide" 
                type="button"
                onclick="
                  console.log('Next button clicked via inline onclick');
                  const slideshow = document.querySelector('.section-resource-list slideshow-component');
                  if (slideshow) {
                    const current = slideshow.current || 0;
                    const next = current < 4 ? current + 1 : 0;
                    console.log('Moving from', current, 'to', next);
                    slideshow.select(next);
                    
                    // Update dots
                    const dots = document.querySelectorAll('.section-resource-list .slideshow-dot');
                    dots.forEach((dot, index) => {
                      dot.classList.toggle('active', index === next);
                    });
                    
                    // Update arrow visibility directly
                    setTimeout(() => {
                      console.log('Updating arrow visibility for next:', next);
                      const prevButton = document.querySelector('.section-resource-list .slideshow-control--prev');
                      const nextButton = document.querySelector('.section-resource-list .slideshow-control--next');
                      
                      if (prevButton && nextButton) {
                        // Show Next button since we're moving to a non-last slide
                        nextButton.style.opacity = '1';
                        nextButton.style.pointerEvents = 'auto';
                        nextButton.style.visibility = 'visible';
                        console.log('Next button made visible');
                        
                        // Check if we need to hide Previous button
                        if (next === 0) {
                          prevButton.style.opacity = '0';
                          prevButton.style.pointerEvents = 'none';
                          prevButton.style.visibility = 'hidden';
                          console.log('Previous button hidden (first slide)');
                        } else {
                          prevButton.style.opacity = '1';
                          prevButton.style.pointerEvents = 'auto';
                          prevButton.style.visibility = 'visible';
                          console.log('Previous button visible');
                        }
                      }
                    }, 100);
                  } else {
                    console.error('Slideshow not found');
                  }
                "
              >
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon icon-arrow">
                  <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
            </div>
          </div>
        </div>
      {% when 'editorial' %}
        {% render 'editorial-product-grid', items: list_items_array %}
    {% endcase %}
  </div>

  {% if section.settings.carousel_on_mobile and section.settings.layout_type != 'carousel' %}
    {% liquid
      assign mobile_carousel_gap = section.settings.columns_gap
    %}
    <div
      class="
        resource-list
        hidden--desktop
        force-full-width
      "
      style="
        --resource-list-column-gap-desktop: {{ mobile_carousel_gap }}px;
        --column-count: {{ section.settings.columns }};
        --mobile-card-size: {{ section.settings.mobile_card_size }};
      "
    >
      {% render 'resource-list-carousel',
        ref: 'resourceListCarouselMobile',
        slides: list_items_array,
        slide_count: max_items,
        settings: section.settings
      %}
    </div>
  {% endif %}

  <div
    class="section-resource-list__content"
    style="--horizontal-alignment: {{ section.settings.horizontal_alignment }};"
  >
    {%- content_for 'blocks' -%}
  </div>
</div>

{% stylesheet %}
  .section-resource-list .resource-list__carousel {
    --slide-width: calc((100% - (var(--resource-list-column-gap) * 3)) / 4);
    --slide-width-mobile: calc((100% - (var(--resource-list-column-gap) * 1)) / 2);
  }

  @media screen and (max-width: 749px) {
    .section-resource-list .resource-list__carousel {
      --slide-width: calc((100% - (var(--resource-list-column-gap) * 1)) / 2);
    }
  }

  .section-resource-list .resource-list__slide {
    width: var(--slide-width);
    flex: 0 0 auto;
    scroll-snap-align: start;
  }

  /* Ensure product cards are properly sized */
  .section-resource-list .product-card {
    width: 100%;
    height: 100%;
  }

  .section-resource-list .card-gallery {
    width: 100%;
    height: auto;
  }

  /* Fix product image height to use 3/3.5 aspect ratio */
  .section-resource-list .card-gallery {
    aspect-ratio: 3/3.5;
  }

  .section-resource-list .product-media-container {
    aspect-ratio: 3/3.5;
  }

  /* Set border-radius for product card images */
  .section-resource-list .card-gallery,
  .section-resource-list .product-media-container,
  .section-resource-list .card-gallery img,
  .section-resource-list .product-media-container img {
    border-radius: 15px;
  }

  /* Fix product title font size to inherit theme defaults */
  .section-resource-list .product-title {
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
  }

  /* Add default gap for header and product sections */
  .section-resource-list__header {
    margin-bottom: var(--spacing-section);
  }

  .section-resource-list .resource-list__carousel {
    margin-top: var(--spacing-section);
  }

  /* Ensure customizer padding settings work */
  .section-resource-list {
    padding-block-start: var(--padding-block-start, 0) !important;
    padding-block-end: var(--padding-block-end, 0) !important;
    padding-inline-start: var(--padding-inline-start, 0) !important;
    padding-inline-end: var(--padding-inline-end, 0) !important;
  }

  /* Override any conflicting padding rules */
  .section.section-resource-list {
    padding-top: var(--padding-block-start, 0) !important;
    padding-bottom: var(--padding-block-end, 0) !important;
  }

  /* Force 4 products to show initially on desktop */
  @media screen and (min-width: 750px) {
    .section-resource-list .resource-list__carousel slideshow-slides {
      display: flex;
      gap: var(--resource-list-column-gap);
    }
    
    .section-resource-list .resource-list__slide {
      min-width: calc((100% - (var(--resource-list-column-gap) * 3)) / 4);
      max-width: calc((100% - (var(--resource-list-column-gap) * 3)) / 4);
    }
  }

  /* Override any theme defaults for slide width */
  .section-resource-list .resource-list__carousel .resource-list__slide {
    width: calc((100% - (var(--resource-list-column-gap) * 3)) / 4) !important;
  }

  @media screen and (max-width: 749px) {
    .section-resource-list .resource-list__carousel .resource-list__slide {
      width: calc((100% - (var(--resource-list-column-gap) * 1)) / 2) !important;
    }
  }

  /* Force single slide movement by overriding scroll behavior */
  .section-resource-list .resource-list__carousel slideshow-slides {
    scroll-behavior: smooth;
    scroll-snap-type: x mandatory;
  }

  /* Ensure each slide moves exactly one position */
  .section-resource-list .resource-list__carousel .resource-list__slide {
    scroll-snap-align: start;
    scroll-snap-stop: always;
  }

  /* Custom JavaScript to force single slide movement */
  .section-resource-list .resource-list__carousel {
    --single-slide-movement: true;
  }

  /* Navigation arrows - active by default, no background, relative positioning */
  /* Combined Navigation Container */
  .section-resource-list .resource-list__carousel .slideshow-navigation-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 30px;
    width: 100%;
    padding: 0px;
  }

  /* Dot navigation styling - Left side */
  .section-resource-list .resource-list__carousel .slideshow-dots {
    display: flex;
    gap: 12px;
    align-items: center;
    flex: 1;
  }

  .section-resource-list .resource-list__carousel .slideshow-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #e0e0e0;
    border: 2px solid transparent;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    padding: 0px;
  }

  .section-resource-list .resource-list__carousel .slideshow-dot:hover {
    background-color: #b0b0b0;
    transform: scale(1.1);
  }

  .section-resource-list .resource-list__carousel .slideshow-dot.active {
    background-color: #000;
    border-color: #000;
    transform: scale(1.2);
  }

  /* Arrow navigation styling - Right side with fixed width */
  .section-resource-list .resource-list__carousel .slideshow-arrows-container {
    width: 100px;
    display: flex;
    justify-content: flex-end;
  }

  .section-resource-list .resource-list__carousel .slideshow-controls {
    display: flex;
    gap: 16px;
    align-items: center;
    flex-direction: row;
  }

  /* Ensure proper arrow positioning */
  .section-resource-list .resource-list__carousel .slideshow-control--prev {
    order: 1;
    display: flex !important;
    visibility: visible !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control--next {
    order: 2;
    display: flex !important;
    visibility: visible !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control {
    background: transparent !important;
    border: none !important;
    border-radius: 0 !important;
    cursor: pointer !important;
    padding: 8px !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    transition: all 0.3s ease !important;
    width: auto !important;
    height: auto !important;
    box-shadow: none !important;
    position: relative !important;
    z-index: 10 !important;
    outline: none !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control:hover {
    background-color: transparent !important;
    border-color: transparent !important;
    transform: scale(1.1) !important;
    box-shadow: none !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control:focus {
    background-color: transparent !important;
    border-color: transparent !important;
    box-shadow: none !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control:active {
    transform: translateY(0) !important;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control:focus {
    outline: 2px solid #007acc !important;
    outline-offset: 2px !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control .icon {
    width: 20px !important;
    height: 20px !important;
    color: #000000 !important;
    stroke: currentColor !important;
    fill: none !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control:hover .icon {
    color: #333333 !important;
  }

  /* Ensure Previous button is properly styled and visible when needed */
  .section-resource-list .resource-list__carousel .slideshow-control--prev {
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    transition: opacity 0.3s ease, visibility 0.3s ease !important;
  }
  
  /* Ensure Next button is properly styled */
  .section-resource-list .resource-list__carousel .slideshow-control--next {
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    transition: opacity 0.3s ease, visibility 0.3s ease !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control--prev.visible {
    opacity: 1 !important;
    pointer-events: auto !important;
    visibility: visible !important;
  }

  .section-resource-list .resource-list__carousel .slideshow-control--prev.hidden {
    opacity: 0 !important;
    pointer-events: none !important;
    visibility: hidden !important;
  }

  /* Hide only the main carousel arrows, not product card slideshow arrows */
  .section-resource-list .resource-list__carousel slideshow-arrows {
    display: none !important;
  }

  /* Keep product card slideshow arrows visible and functional */
  .section-resource-list .card-gallery slideshow-arrows {
    position: absolute;
    width: 100%;
  }

  .section-resource-list .card-gallery slideshow-arrows .slideshow-control {
    opacity: 0;
    background: rgb(255 255 255 / 0%) !important;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: inline-grid;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .section-resource-list .card-gallery:hover slideshow-arrows .slideshow-control {
    opacity: 1;
  }

  .section-resource-list .card-gallery slideshow-arrows .slideshow-control:hover {
    background: rgba(255, 255, 255, 0.9);
    transform: scale(1.1);
  }

  /* Ensure product card slideshow is enabled */
  .section-resource-list .card-gallery slideshow-component {
    pointer-events: auto !important;
  }

  .section-resource-list .card-gallery slideshow-component[disabled="true"] {
    pointer-events: auto !important;
  }

  /* Override any disabled state for product card slideshow */
  .section-resource-list .card-gallery slideshow-component[disabled="true"] slideshow-slides {
    pointer-events: auto !important;
  }

  .section-resource-list .card-gallery slideshow-component[disabled="true"] slideshow-arrows {
    display: flex !important;
    pointer-events: auto !important;
  }

  /* Ensure our custom navigation is visible and functional */
  .section-resource-list .slideshow-navigation-container {
    display: flex !important;
    visibility: visible !important;
    opacity: 1 !important;
    z-index: 100 !important;
  }

  /* Ensure carousel container has normal positioning */
  .section-resource-list .resource-list__carousel {
    position: static;
    margin-bottom: 0;
  }

  /* Reverse content section in slideshow container */
  .section-resource-list .resource-list__carousel slideshow-container {
    display: flex;
    flex-direction: column-reverse;
  }

  /* Remove ALL left and right spacing from wrapper and carousel */
  .section-resource-list {
    width: 100%;
    max-width: 100%;
    margin: 0;
    padding: 0;
  }

  /* Remove left and right spacing from carousel */
  .section-resource-list .resource-list__carousel {
    margin: 0;
    padding: 0;
    width: 100%;
    max-width: 100%;
  }

  /* Remove gutter spacing from carousel slides */
  .section-resource-list .resource-list__carousel slideshow-slides {
    margin: 0;
    padding: 0;
  }

  /* Remove theme's default gutter spacing */
  .section-resource-list .resource-list__carousel {
    --gutter-slide-width: 0px;
  }

  /* Remove any inherited padding from theme */
  .section-resource-list .resource-list__carousel slideshow-component {
    margin: 0;
    padding: 0;
  }

  /* Override any theme defaults */
  .section-resource-list .resource-list__carousel {
    --util-page-margin-offset: 0px;
  }
{% endstylesheet %}

{% javascript %}
  // Override carousel behavior to move one slide at a time
  document.addEventListener('DOMContentLoaded', function() {
    const carousel = document.querySelector('.section-resource-list .resource-list__carousel slideshow-component');
    if (carousel) {
      // Override the next and previous methods to move only one slide
      const originalNext = carousel.next;
      const originalPrevious = carousel.previous;
      
      carousel.next = function(event, options) {
        // Move only one slide instead of the default behavior
        const currentIndex = this.current;
        this.select(currentIndex + 1, event, options);
      };
      
      carousel.previous = function(event, options) {
        // Move only one slide instead of the default behavior
        const currentIndex = this.current;
        this.select(currentIndex - 1, event, options);
      };

      // Add dot navigation functionality with improved event handling
      const dots = document.querySelectorAll('.section-resource-list .slideshow-dot');
      dots.forEach((dot, index) => {
        dot.addEventListener('click', function(event) {
          event.preventDefault();
          event.stopPropagation();
          console.log('Dot clicked:', index);
          
          // Remove active class from all dots
          dots.forEach(d => d.classList.remove('active'));
          // Add active class to clicked dot
          this.classList.add('active');
          
          // Go to selected slide with multiple approaches
          if (carousel) {
            try {
              // Method 1: Direct select
              if (typeof carousel.select === 'function') {
                carousel.select(index);
                console.log('Carousel select called for index:', index);
              }
              
              // Method 2: Set current and trigger change
              setTimeout(() => {
                if (carousel.current !== index) {
                  carousel.current = index;
                  console.log('Carousel current set to:', index);
                  
                  // Trigger a custom event to ensure carousel updates
                  const changeEvent = new CustomEvent('carousel:change', {
                    detail: { index: index }
                  });
                  carousel.dispatchEvent(changeEvent);
                }
              }, 50);
              
            } catch (error) {
              console.error('Error navigating to slide:', error);
            }
          }
        });
      });

      // Add arrow navigation functionality - completely rewritten
      const prevButton = document.querySelector('.section-resource-list .slideshow-control--prev');
      const nextButton = document.querySelector('.section-resource-list .slideshow-control--next');
      
      console.log('Found prev button:', prevButton);
      console.log('Found next button:', nextButton);
      console.log('Found carousel:', carousel);
      
      if (nextButton) {
        console.log('Setting up Next button with new approach...');
        
        // Try multiple event binding approaches
        nextButton.addEventListener('mousedown', function(event) {
          event.preventDefault();
          event.stopPropagation();
          console.log('Next button mousedown detected!');
        });
        
        nextButton.addEventListener('click', function(event) {
          event.preventDefault();
          event.stopPropagation();
          console.log('Next button click detected!');
          
          // Try to find the carousel in multiple ways
          let slideshowComponent = document.querySelector('.section-resource-list slideshow-component');
          if (!slideshowComponent) {
            slideshowComponent = document.querySelector('slideshow-component');
          }
          if (!slideshowComponent) {
            slideshowComponent = document.querySelector('[ref="resourceListCarousel"]');
          }
          
          console.log('Found slideshow component:', slideshowComponent);
          
          if (slideshowComponent) {
            console.log('Slideshow component properties:', {
              current: slideshowComponent.current,
              slides: slideshowComponent.slides,
              select: typeof slideshowComponent.select
            });
            
            const currentIndex = slideshowComponent.current || 0;
            const newIndex = currentIndex < 4 ? currentIndex + 1 : 0;
            console.log('Attempting to move from slide', currentIndex, 'to slide', newIndex);
            
            // Try multiple methods to move the carousel
            if (typeof slideshowComponent.select === 'function') {
              slideshowComponent.select(newIndex);
              console.log('Method 1: select() called');
            } else if (typeof slideshowComponent.next === 'function') {
              slideshowComponent.next();
              console.log('Method 2: next() called');
            } else if (slideshowComponent.slides && slideshowComponent.slides.length > 0) {
              slideshowComponent.current = newIndex;
              console.log('Method 3: current property set');
            }
            
            // Update dot navigation
            updateActiveDot(newIndex);
          } else {
            console.error('No slideshow component found');
          }
        });
        
        // Also try direct onclick
        nextButton.onclick = function(event) {
          console.log('Next button onclick triggered!');
        };
        
        console.log('Next button event handlers set');
      }

      // Update active dot when carousel slides change - only for main carousel
      carousel.addEventListener('slideshow:select', function(event) {
        // Only update dots if this is the main carousel, not product card slideshow
        if (event.target === carousel) {
          const currentIndex = event.detail.index;
          console.log('Main carousel slideshow:select event - index:', currentIndex);
          updateActiveDot(currentIndex);
        }
      });

      carousel.addEventListener('change', function(event) {
        // Only update dots if this is the main carousel, not product card slideshow
        if (event.target === carousel) {
          const currentIndex = carousel.current || 0;
          console.log('Main carousel change event - index:', currentIndex);
          updateActiveDot(currentIndex);
        }
      });

      // Listen for custom carousel change event - only for main carousel
      carousel.addEventListener('carousel:change', function(event) {
        // Only update dots if this is the main carousel, not product card slideshow
        if (event.target === carousel) {
          const currentIndex = event.detail.index;
          console.log('Main carousel:change event - index:', currentIndex);
          updateActiveDot(currentIndex);
        }
      });

      // Function to update active dot
      function updateActiveDot(index) {
        dots.forEach((dot, dotIndex) => {
          if (dotIndex === index) {
            dot.classList.add('active');
            console.log('Dot', dotIndex, 'set to active');
          } else {
            dot.classList.remove('active');
          }
        });
      }

      // Function to update arrow visibility based on current slide
      function updateArrowVisibility(currentIndex) {
        const prevButton = document.querySelector('.section-resource-list .slideshow-control--prev');
        const nextButton = document.querySelector('.section-resource-list .slideshow-control--next');
        
        // Calculate the last slide index based on number of products
        const navContainer = document.querySelector('.section-resource-list .slideshow-navigation-container');
        const totalProducts = navContainer ? parseInt(navContainer.dataset.totalProducts) : 8;
        const productsPerView = navContainer ? parseInt(navContainer.dataset.productsPerView) : 4;
        const lastSlideIndex = Math.max(0, totalProducts - productsPerView);
        
        console.log('Updating arrow visibility for slide:', currentIndex, 'Last slide:', lastSlideIndex, 'Total products:', totalProducts);
        
        if (prevButton && nextButton) {
          // Hide Previous button if on first slide (index 0)
          if (currentIndex === 0) {
            prevButton.style.opacity = '0';
            prevButton.style.pointerEvents = 'none';
            prevButton.style.visibility = 'hidden';
            console.log('Previous button hidden (first slide)');
          } else {
            prevButton.style.opacity = '1';
            prevButton.style.pointerEvents = 'auto';
            prevButton.style.visibility = 'visible';
            console.log('Previous button visible');
          }
          
          // Hide Next button if on last slide
          if (currentIndex >= lastSlideIndex) {
            nextButton.style.opacity = '0';
            nextButton.style.pointerEvents = 'none';
            nextButton.style.visibility = 'hidden';
            console.log('Next button hidden (last slide)');
          } else {
            nextButton.style.opacity = '1';
            nextButton.style.pointerEvents = 'auto';
            nextButton.style.visibility = 'visible';
            console.log('Next button visible');
          }
        } else {
          console.error('Arrow buttons not found:', { prevButton, nextButton });
        }
      }

      // Initial dot state and arrow visibility
      setTimeout(() => {
        const initialIndex = carousel.current || 0;
        console.log('Setting initial dot state to index:', initialIndex);
        updateActiveDot(initialIndex);
        
        // Debug: Check if Previous button exists
        const prevButton = document.querySelector('.section-resource-list .slideshow-control--prev');
        const nextButton = document.querySelector('.section-resource-list .slideshow-control--next');
        console.log('Found Previous button:', prevButton);
        console.log('Found Next button:', nextButton);
        
        updateArrowVisibility(initialIndex);
      }, 100);
    }
  });
{% endjavascript %}

{% schema %}
{
  "name": "Product Carousel",
  "class": "ui-test-product-list",
  "blocks": [
    {
      "type": "@theme"
    },
    {
      "type": "@app"
    },
    {
      "type": "_divider"
    },
    {
      "type": "_product-list-content"
    },
    {
      "type": "_product-card"
    }
  ],
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "t:settings.collection"
    },
    {
      "type": "select",
      "id": "layout_type",
      "label": "t:settings.layout_type",
      "options": [
        {
          "value": "grid",
          "label": "t:options.grid"
        },
        {
          "value": "carousel",
          "label": "t:options.carousel"
        },
        {
          "value": "editorial",
          "label": "t:options.editorial"
        }
      ],
      "default": "carousel"
    },
    {
      "type": "checkbox",
      "id": "carousel_on_mobile",
      "label": "t:settings.carousel_on_mobile",
      "default": false,
      "visible_if": "{{ section.settings.layout_type != 'carousel' }}"
    },
    {
      "type": "range",
      "id": "max_products",
      "label": "t:settings.product_count",
      "min": 1,
      "max": 16,
      "step": 1,
      "default": 4
    },
    {
      "type": "range",
      "id": "columns",
      "label": "t:settings.columns",
      "min": 1,
      "max": 8,
      "step": 1,
      "default": 4,
      "visible_if": "{{ section.settings.layout_type != 'editorial' }}"
    },
    {
      "type": "select",
      "id": "mobile_columns",
      "label": "t:settings.mobile_columns",
      "options": [
        {
          "value": "1",
          "label": "t:options.one_number"
        },
        {
          "value": "2",
          "label": "t:options.two_number"
        }
      ],
      "default": "2",
      "visible_if": "{{ section.settings.layout_type == 'grid' and section.settings.carousel_on_mobile == false }}"
    },
    {
      "type": "select",
      "id": "mobile_card_size",
      "label": "t:settings.mobile_columns",
      "options": [
        {
          "value": "60cqw",
          "label": "t:options.one_number"
        },
        {
          "value": "44cqw",
          "label": "t:options.two_number"
        }
      ],
      "default": "60cqw",
      "visible_if": "{{ section.settings.layout_type == 'carousel' or section.settings.carousel_on_mobile == true }}"
    },
    {
      "type": "range",
      "id": "columns_gap",
      "label": "t:settings.horizontal_gap",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 8,
      "visible_if": "{{ section.settings.layout_type == 'grid' or section.settings.layout_type == 'carousel' }}"
    },
    {
      "type": "range",
      "id": "rows_gap",
      "label": "t:settings.vertical_gap",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 8,
      "visible_if": "{{ section.settings.layout_type == 'grid'}}"
    },
    {
      "type": "header",
      "content": "t:content.carousel_navigation",
      "visible_if": "{{ section.settings.layout_type == 'carousel' or section.settings.carousel_on_mobile == true }}"
    },
    {
      "type": "select",
      "id": "icons_style",
      "label": "t:settings.icon",
      "options": [
        {
          "value": "arrow",
          "label": "t:options.arrows"
        },
        {
          "value": "chevron",
          "label": "t:options.chevrons"
        },
        {
          "value": "arrows_large",
          "label": "t:options.arrows_large"
        },
        {
          "value": "chevron_large",
          "label": "t:options.chevron_large"
        },
        {
          "value": "none",
          "label": "t:options.none"
        }
      ],
      "default": "arrow",
      "visible_if": "{{ section.settings.layout_type == 'carousel' or section.settings.carousel_on_mobile == true }}"
    },
    {
      "type": "select",
      "id": "icons_shape",
      "label": "t:settings.icon_background",
      "options": [
        {
          "value": "none",
          "label": "t:options.none"
        },
        {
          "value": "circle",
          "label": "t:options.circle"
        },
        {
          "value": "square",
          "label": "t:options.square"
        }
      ],
      "default": "none",
      "visible_if": "{{ section.settings.icons_style != 'none' and section.settings.layout_type == 'carousel' or section.settings.carousel_on_mobile == true }}"
    },
    {
      "type": "header",
      "content": "t:content.section_layout"
    },
    {
      "type": "select",
      "id": "section_width",
      "label": "t:settings.width",
      "options": [
        {
          "value": "page-width",
          "label": "t:options.page"
        },
        {
          "value": "full-width",
          "label": "t:options.full"
        }
      ],
      "default": "page-width"
    },
    {
      "type": "select",
      "id": "horizontal_alignment",
      "label": "t:settings.alignment",
      "options": [
        {
          "value": "flex-start",
          "label": "t:options.left"
        },
        {
          "value": "center",
          "label": "t:options.center"
        },
        {
          "value": "flex-end",
          "label": "t:options.right"
        }
      ],
      "default": "flex-start"
    },
    {
      "type": "range",
      "id": "gap",
      "label": "t:settings.gap",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 12
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:settings.color_scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:content.padding"
    },
    {
      "type": "range",
      "id": "padding-block-start",
      "label": "t:settings.top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding-block-end",
      "label": "t:settings.bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    }
  ],
  "presets": [
    {
      "name": "Product Carousel",
      "category": "t:categories.products",
      "settings": {
        "collection": "",
        "max_products": 8,
        "layout_type": "grid",
        "carousel_on_mobile": false,
        "columns": 4,
        "mobile_columns": "2",
        "columns_gap": 8,
        "rows_gap": 24,
        "icons_style": "arrow",
        "icons_shape": "none",
        "section_width": "page-width",
        "gap": 28,
        "color_scheme": "scheme-1",
        "padding-block-start": 48,
        "padding-block-end": 48
      },
      "blocks": {
        "static-header": {
          "type": "_product-list-content",
          "name": "t:names.header",
          "static": true,
          "settings": {
            "content_direction": "row",
            "vertical_on_mobile": false,
            "horizontal_alignment": "space-between",
            "vertical_alignment": "flex-end",
            "align_baseline": true,
            "horizontal_alignment_flex_direction_column": "flex-start",
            "vertical_alignment_flex_direction_column": "center",
            "gap": 12,
            "width": "fill",
            "custom_width": 100,
            "width_mobile": "fill",
            "custom_width_mobile": 100,
            "height": "fit",
            "custom_height": 100,
            "inherit_color_scheme": true,
            "color_scheme": "",
            "background_media": "none",
            "video_position": "cover",
            "background_image_position": "cover",
            "border": "none",
            "border_width": 1,
            "border_opacity": 100,
            "border_radius": 0,
            "padding-block-start": 0,
            "padding-block-end": 0,
            "padding-inline-start": 0,
            "padding-inline-end": 0
          },
          "blocks": {
            "product_list_text": {
              "type": "_product-list-text",
              "name": "t:names.collection_title",
              "settings": {
                "text": "<h3>{{ closest.collection.title }}</h3>",
                "type_preset": "rte",
                "font": "var(--font-body--family)",
                "font_size": "",
                "line_height": "normal",
                "letter_spacing": "normal",
                "case": "none",
                "wrap": "pretty",
                "width": "fit-content",
                "max_width": "normal",
                "alignment": "left",
                "padding-block-start": 0,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            },
            "product_list_button": {
              "type": "_product-list-button",
              "name": "t:names.product_list_button",
              "settings": {
                "label": "View all",
                "open_in_new_tab": false,
                "style_class": "link",
                "width": "fit-content",
                "custom_width": 100,
                "width_mobile": "fit-content",
                "custom_width_mobile": 100
              }
            }
          },
          "block_order": ["product_list_text", "product_list_button"]
        },
        "static-product-card": {
          "type": "_product-card",
          "name": "t:names.product_card",
          "static": true,
          "settings": {
            "product_card_gap": 4,
            "inherit_color_scheme": true,
            "color_scheme": "",
            "border": "none",
            "border_width": 1,
            "border_opacity": 100,
            "border_radius": 0,
            "padding-block-start": 0,
            "padding-block-end": 0,
            "padding-inline-start": 0,
            "padding-inline-end": 0
          },
          "blocks": {
            "product-card-gallery": {
              "type": "_product-card-gallery",
              "name": "t:names.product_card_media",
              "settings": {
                "image_ratio": "adapt",
                "border": "none",
                "border_width": 1,
                "border_opacity": 100,
                "border_radius": 0,
                "padding-block-start": 0,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            },
            "product_title": {
              "type": "product-title",
              "name": "t:names.product_title",
              "settings": {
                "width": "fit-content",
                "max_width": "normal",
                "alignment": "left",
                "type_preset": "rte",
                "font": "var(--font-body--family)",
                "font_size": "1rem",
                "line_height": "normal",
                "letter_spacing": "normal",
                "case": "none",
                "wrap": "pretty",
                "color": "var(--color-foreground)",
                "background": false,
                "background_color": "#00000026",
                "corner_radius": 0,
                "padding-block-start": 4,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            },
            "price": {
              "type": "price",
              "name": "t:names.product_price",
              "settings": {
                "show_sale_price_first": true,
                "show_installments": false,
                "show_tax_info": false,
                "type_preset": "h6",
                "width": "100%",
                "alignment": "left",
                "font": "var(--font-body--family)",
                "font_size": "1rem",
                "line_height": "normal",
                "letter_spacing": "normal",
                "case": "none",
                "color": "var(--color-foreground)",
                "padding-block-start": 0,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            }
          },
          "block_order": ["product-card-gallery", "product_title", "price"]
        }
      },
      "block_order": []
    },
    {
      "name": "t:names.products_carousel",
      "category": "t:categories.products",
      "settings": {
        "collection": "",
        "max_products": 6,
        "layout_type": "carousel",
        "carousel_on_mobile": false,
        "columns": 4,
        "mobile_columns": "2",
        "columns_gap": 8,
        "rows_gap": 24,
        "icons_style": "arrow",
        "icons_shape": "circle",
        "section_width": "page-width",
        "gap": 28,
        "color_scheme": "scheme-1",
        "padding-block-start": 48,
        "padding-block-end": 48
      },
      "blocks": {
        "static-header": {
          "type": "_product-list-content",
          "name": "t:names.header",
          "static": true,
          "settings": {
            "content_direction": "row",
            "vertical_on_mobile": false,
            "horizontal_alignment": "space-between",
            "vertical_alignment": "flex-end",
            "align_baseline": true,
            "horizontal_alignment_flex_direction_column": "flex-start",
            "vertical_alignment_flex_direction_column": "center",
            "gap": 12,
            "width": "fill",
            "custom_width": 100,
            "width_mobile": "fill",
            "custom_width_mobile": 100,
            "height": "fit",
            "custom_height": 100,
            "inherit_color_scheme": true,
            "color_scheme": "",
            "background_media": "none",
            "video_position": "cover",
            "background_image_position": "cover",
            "border": "none",
            "border_width": 1,
            "border_opacity": 100,
            "border_radius": 0,
            "padding-block-start": 0,
            "padding-block-end": 0,
            "padding-inline-start": 0,
            "padding-inline-end": 0
          },
          "blocks": {
            "product_list_text": {
              "type": "_product-list-text",
              "name": "t:names.collection_title",
              "settings": {
                "text": "<h3>{{ closest.collection.title }}</h3>",
                "type_preset": "rte",
                "font": "var(--font-body--family)",
                "font_size": "",
                "line_height": "normal",
                "letter_spacing": "normal",
                "case": "none",
                "wrap": "pretty",
                "width": "fit-content",
                "max_width": "normal",
                "alignment": "left",
                "padding-block-start": 0,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            },
            "product_list_button": {
              "type": "_product-list-button",
              "name": "t:names.product_list_button",
              "settings": {
                "label": "View all",
                "open_in_new_tab": false,
                "style_class": "link",
                "width": "fit-content",
                "custom_width": 100,
                "width_mobile": "fit-content",
                "custom_width_mobile": 100
              }
            }
          },
          "block_order": ["product_list_text", "product_list_button"]
        },
        "static-product-card": {
          "type": "_product-card",
          "name": "t:names.product_card",
          "static": true,
          "settings": {
            "product_card_gap": 4,
            "inherit_color_scheme": true,
            "color_scheme": "",
            "border": "none",
            "border_width": 1,
            "border_opacity": 100,
            "border_radius": 0,
            "padding-block-start": 0,
            "padding-block-end": 0,
            "padding-inline-start": 0,
            "padding-inline-end": 0
          },
          "blocks": {
            "product-card-gallery": {
              "type": "_product-card-gallery",
              "name": "t:names.product_card_media",
              "settings": {
                "image_ratio": "adapt",
                "border": "none",
                "border_width": 1,
                "border_opacity": 100,
                "border_radius": 0,
                "padding-block-start": 0,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            },
            "product_title": {
              "type": "product-title",
              "name": "t:names.product_title",
              "settings": {
                "width": "fit-content",
                "max_width": "normal",
                "alignment": "left",
                "type_preset": "rte",
                "font": "var(--font-body--family)",
                "font_size": "1rem",
                "line_height": "normal",
                "letter_spacing": "normal",
                "case": "none",
                "wrap": "pretty",
                "color": "var(--color-foreground)",
                "background": false,
                "background_color": "#00000026",
                "corner_radius": 0,
                "padding-block-start": 4,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            },
            "price": {
              "type": "price",
              "name": "t:names.product_price",
              "settings": {
                "show_sale_price_first": true,
                "show_installments": false,
                "show_tax_info": false,
                "type_preset": "h6",
                "width": "100%",
                "alignment": "left",
                "font": "var(--font-body--family)",
                "font_size": "1rem",
                "line_height": "normal",
                "letter_spacing": "normal",
                "case": "none",
                "color": "var(--color-foreground)",
                "padding-block-start": 0,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            }
          },
          "block_order": ["product-card-gallery", "product_title", "price"]
        }
      },
      "block_order": []
    },
    {
      "name": "t:names.products_editorial",
      "category": "t:categories.products",
      "settings": {
        "collection": "",
        "layout_type": "editorial",
        "carousel_on_mobile": false,
        "max_products": 4,
        "columns": 4,
        "mobile_columns": "2",
        "columns_gap": 8,
        "rows_gap": 24,
        "icons_style": "arrow",
        "icons_shape": "none",
        "section_width": "page-width",
        "horizontal_alignment": "flex-start",
        "gap": 64,
        "color_scheme": "scheme-1",
        "padding-block-start": 48,
        "padding-block-end": 48
      },
      "blocks": {
        "static-header": {
          "type": "_product-list-content",
          "name": "t:names.header",
          "static": true,
          "settings": {
            "content_direction": "row",
            "vertical_on_mobile": false,
            "horizontal_alignment": "space-between",
            "vertical_alignment": "flex-end",
            "align_baseline": true,
            "horizontal_alignment_flex_direction_column": "flex-start",
            "vertical_alignment_flex_direction_column": "center",
            "gap": 12,
            "width": "fill",
            "custom_width": 100,
            "width_mobile": "fill",
            "custom_width_mobile": 100,
            "height": "fit",
            "custom_height": 100,
            "inherit_color_scheme": true,
            "color_scheme": "",
            "background_media": "none",
            "video_position": "cover",
            "background_image_position": "cover",
            "border": "none",
            "border_width": 1,
            "border_opacity": 100,
            "border_radius": 0,
            "padding-block-start": 0,
            "padding-block-end": 0,
            "padding-inline-start": 0,
            "padding-inline-end": 0
          },
          "blocks": {
            "product_list_text": {
              "type": "_product-list-text",
              "name": "t:names.collection_title",
              "settings": {
                "text": "<h3>{{ closest.collection.title }}</h3>",
                "width": "fit-content",
                "max_width": "normal",
                "alignment": "left",
                "type_preset": "rte",
                "font": "var(--font-body--family)",
                "font_size": "",
                "line_height": "normal",
                "letter_spacing": "normal",
                "case": "none",
                "wrap": "pretty",
                "color": "var(--color-foreground)",
                "background": false,
                "background_color": "#00000026",
                "corner_radius": 0,
                "padding-block-start": 0,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            },
            "product_list_button": {
              "type": "_product-list-button",
              "name": "t:names.product_list_button",
              "settings": {
                "label": "View all",
                "open_in_new_tab": false,
                "style_class": "link",
                "width": "fit-content",
                "custom_width": 100,
                "width_mobile": "fit-content",
                "custom_width_mobile": 100
              }
            }
          },
          "block_order": ["product_list_text", "product_list_button"]
        },
        "static-product-card": {
          "type": "_product-card",
          "name": "t:names.product_card",
          "static": true,
          "settings": {
            "product_card_gap": 4,
            "inherit_color_scheme": true,
            "color_scheme": "",
            "border": "none",
            "border_width": 1,
            "border_opacity": 100,
            "border_radius": 0,
            "padding-block-start": 0,
            "padding-block-end": 0,
            "padding-inline-start": 0,
            "padding-inline-end": 0
          },
          "blocks": {
            "product-card-gallery": {
              "type": "_product-card-gallery",
              "name": "t:names.product_card_media",
              "settings": {
                "image_ratio": "adapt",
                "border": "none",
                "border_width": 1,
                "border_opacity": 100,
                "border_radius": 0,
                "padding-block-start": 0,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            },
            "product_title": {
              "type": "product-title",
              "name": "t:names.product_title",
              "settings": {
                "width": "fit-content",
                "max_width": "normal",
                "alignment": "left",
                "type_preset": "rte",
                "font": "var(--font-body--family)",
                "font_size": "1rem",
                "line_height": "normal",
                "letter_spacing": "normal",
                "case": "none",
                "wrap": "pretty",
                "color": "var(--color-foreground)",
                "background": false,
                "background_color": "#00000026",
                "corner_radius": 0,
                "padding-block-start": 4,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            },
            "price": {
              "type": "price",
              "name": "t:names.product_price",
              "settings": {
                "show_sale_price_first": true,
                "show_installments": false,
                "show_tax_info": false,
                "type_preset": "h6",
                "width": "100%",
                "alignment": "left",
                "font": "var(--font-body--family)",
                "font_size": "1rem",
                "line_height": "normal",
                "letter_spacing": "normal",
                "case": "none",
                "color": "var(--color-foreground)",
                "padding-block-start": 0,
                "padding-block-end": 0,
                "padding-inline-start": 0,
                "padding-inline-end": 0
              }
            }
          },
          "block_order": ["product-card-gallery", "product_title", "price"]
        }
      },
      "block_order": []
    }
  ]
}
{% endschema %}
